name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run nightly at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  e2e-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgis/postgis:15-3.4
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: digikop_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        cd frontend && npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: Setup test environment
      env:
        TEST_DATABASE_URL: postgresql://postgres:postgres@localhost:5432/digikop_test
        NODE_ENV: test
      run: |
        npm run migrate
    
    - name: Build application
      run: npm run build
    
    - name: Run E2E tests
      env:
        TEST_DATABASE_URL: postgresql://postgres:postgres@localhost:5432/digikop_test
        BASE_URL: http://localhost:3000
        API_URL: http://localhost:3001
        CI: true
      run: npm run test:e2e
    
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
    
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: test-results/
        retention-days: 30

  cross-browser-tests:
    timeout-minutes: 90
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    services:
      postgres:
        image: postgis/postgis:15-3.4
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: digikop_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        cd frontend && npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps ${{ matrix.browser }}
    
    - name: Setup test environment
      env:
        TEST_DATABASE_URL: postgresql://postgres:postgres@localhost:5432/digikop_test
        NODE_ENV: test
      run: npm run migrate
    
    - name: Build application
      run: npm run build
    
    - name: Run E2E tests on ${{ matrix.browser }}
      env:
        TEST_DATABASE_URL: postgresql://postgres:postgres@localhost:5432/digikop_test
        BASE_URL: http://localhost:3000
        API_URL: http://localhost:3001
        CI: true
      run: npx playwright test --project=${{ matrix.browser }}
    
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ matrix.browser }}
        path: playwright-report/
        retention-days: 30

  performance-tests:
    timeout-minutes: 45
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || (github.event_name == 'push' && github.ref == 'refs/heads/main')
    
    services:
      postgres:
        image: postgis/postgis:15-3.4
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: digikop_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        cd frontend && npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps chromium
    
    - name: Setup test environment
      env:
        TEST_DATABASE_URL: postgresql://postgres:postgres@localhost:5432/digikop_test
        NODE_ENV: test
      run: npm run migrate
    
    - name: Build application
      run: npm run build
    
    - name: Run Performance tests
      env:
        TEST_DATABASE_URL: postgresql://postgres:postgres@localhost:5432/digikop_test
        BASE_URL: http://localhost:3000
        API_URL: http://localhost:3001
        CI: true
      run: npx playwright test e2e/tests/performance.spec.ts
    
    - name: Upload performance results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: performance-results
        path: test-results/performance-report.json
        retention-days: 90